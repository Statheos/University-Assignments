(deffacts static-facts (food-at 4 2) ( food-at 5 2))
(deffacts dynamic-facts (packman-at) (hi) (bye))
(deffacts dynamic-facts (packman-at 5 2))
(deffacts dynamic-facts (packman-at))
(deffacts dynamic6 (pack))
(Costas)
(costas 6)
(Costas is_a really good student)
(His-AM_is_161041)
(Impossible is just an opinion)
(THE PARSER WORKS)
(printout t (This is good))
(printout t (This-is-a-test)) 
(bind ?var 15)
(bind ?num 6)
(= 5 6)
(= ?var ?x)
(= (+ ?num 2) ?x)
(= 100(+ ?num 2))
(= ?num 2)
(+ +5 -6)
(- +3 -20 ?x)
(* ?num ?x)
(+ 5 +6 7 -7)
(+ 4 7)
(* ?var ?x)
(+ ?var ?x 5)
(- 5 72 5)
(- ?var 5 1)
(/ ?x 2 1)
(/ 6 3)
(/ -6 2)
(* 4 2 6 1 -7 23 0)
(- 4 2 666 1 -7 23 0)
(defrule MOVE-UP (packman-at ?x ?y))
(food-at ?z ?y) 
-> 
(printout t(packman has reached food))
(defrule MOVE_down (packman-at 5 5))
(food-at 3 ?y) 
-> 
(printout t(packman has not reached food))
 (test 4 4)
(test 7 6)
(test ?k 5)
(bind ?x (+ 4 5))
(bind ?x (read))
(test (= ?var ?x)
(test (= ?var 4)
(test (= 5 6))
+ 5 6
- 6 6 4
* 5
5 + 5
6 / 3;
k = 4;
(print (kati))
(defrule MOVE_down (packman-at 5 5)) (food-at 3 ?y) -> (printout t(packman has not reached food))
(+)
6
(5)
